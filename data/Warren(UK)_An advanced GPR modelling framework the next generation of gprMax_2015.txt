Warren
An advanced GPR modelling framework: the next generation of gprMax
2015
IEEE

An advanced GPR modelling framework: the next generation of gprMax Craig Warren, Antonios Giannopoulos, and Iraklis Giannakis Institute for Infrastructure and Environment School of Engineering The University of Edinburgh Edinburgh, Scotland, UK Craig.Warren@ed.ac.uk, A.Giannopoulos@ed.ac.uk, I.Giannakis@ed.ac.uk  Abstract—gprMax is a freely-available set of electromagnetic wave simulation tools based on the Finite-Difference TimeDomain (FDTD) numerical method. gprMax was originally written in the mid-1990s and has primarily been used to simulate Ground Penetrating Radar (GPR). Current computing resources offer the opportunity to build detailed and complex FDTD models of GPR to an extent that was not previously possible. To enable these types of simulations to be more easily realised, and also to facilitate the addition of more advanced features, significant modernisations have been made to gprMax. The original Cbased code has been completely rewritten using a combination of Python and Cython programming languages. Standard and robust file formats have been chosen for geometry and field output files. New advanced modelling features have been added including: an unsplit implementation of higher order perfectly matched layers (PMLs) using a recursive integration approach; uniaxially anisotropic materials; dispersive media using multiple Debye, Drude or Lorenz expressions; improved soil modelling using a semi-empirical formulation for dielectric properties and fractals for geometric characteristics; rough surface generation; and the ability to embed complex transducers and targets.  I. I NTRODUCTION gprMax (http://www.gprmax.com) was originally developed in 1996 [1] when numerical modelling using the FDTD method and, in general, the numerical modelling of Ground Penetrating Radar (GPR) were in their infancy. Since then a number of commercial [2], [3] and other freely-available [4], [5] FDTD-based solvers have become available, but over the past 18 years gprMax has been one of the most widely used simulation tools in the GPR community. It has been successfully used for a diverse range of applications in academia and industry [6]–[9], and has been cited nearly 200 times since 2005 [10]. gprMax consists of two simulators – gprMax2D, which solves the transverse-magnetic mode with respect to z (TMz) in 2D, and gprMax3D which solves the full FDTD algorithm in 3D. Both simulators are command-line-driven programs that do not feature a graphical user interface (GUI). This allows gprMax to be very flexible and scriptable software that can be easily used for many different applications. It specifically allows gprMax to be run in high-performance computing (HPC) environments, i.e., on supercomputers. gprMax contains many powerful and customisable features such as: Perfectly Matched Layer (PML) absorbing boundary conditions; user-definable  materials; user-specifiable excitation functions; simulation of thin wires; voltage sources and 1D transmission line models for feeding antennas. Computing power has increased dramatically since gprMax was initially developed – multi-core CPUs and gigabytes of RAM are now standard features on desktop and laptop machines, and many research institutions, such as the University of Edinburgh, now have their own HPC systems [11]. These computational advances have particularly benefitted volumebased numerical techniques such as FDTD, and allowed larger and more complex scenarios to be investigated. To enable these types of problems to be simulated using gprMax, we have made significant modernisations to the code and also added a number of new advanced features to the software. The first part of this paper describes the design of the new codebase and the second part details some of these new advanced features. II. C ODE R EDESIGN gprMax is cross-platform and was originally written using the C programming language, with the computationally intensive parts – the FDTD solver loops – parallelised using OpenMP [12]. To facilitate the implementation of new advanced features and to lay the foundation for future developments, it was decided that the code should be rewritten in an object-orientated language. Python [13] is an interpreted language that is object-oriented and features dynamic typing and automatic memory management. It is also intended to be highly readable and extensible. However, the ease and flexibility of Python comes at a cost of speed when compared to statically typed languages such as C. This loss of speed can be mitigated by utilising Cython [14] – a superset of Python that generates efficient C source code that can be compiled into extension modules. Therefore, the new version of gprMax has been written using a combination of Python, NumPy, and Cython with OpenMP, which keeps the benefits of Python with most of the speed of C. gprMax has retained a simple text-based input file where users specify all the parameters for a simulation, e.g., model size, discretization, time window, geometry, materials, and excitation. The input file has now been made scriptable by permitting blocks of Python code to be specified, which are executed when the file is read into gprMax. Listing 1  978-1-4799-6495-6/15/$31.00 ©2015 IEEE  and visualisation. It also has a number of free readers available including Paraview (http://www.paraview.org). III. N EW ADVANCED MODELLING FEATURES As part of the process of rewriting gprMax, improvements have been made to areas of the codebase, and several new advanced modelling features have been added. A. Recursive Integration Perfectly Matched Layer (RIPML)  Fig. 1. A model of a high-frequency antenna that can be easily embedded into gprMax.  demonstrates an example of this benefit by including repetitive geometry commands scripted directly in the input file using simple Python loops. In this example, a cylinder extending from 0 to 100 mm in the z-direction, with y-coordinate 50 mm, made of a perfect electric conductor, with radius 5 mm, is repeated every 20 mm in the x-direction from 20 mm to 160 mm in increments of 20 mm. Listing 1. Python scripting in an input file #python: for x in range(0, 8) print(’#cylinder: z 0.000 0.100 {} 0.050 0.005 pec’.format(0.020 + x * 0.020)) #end_python:  gprMax also now includes Python modules with pre-defined models of antennas that behave similarly to commercial antennas. Currently, models of antennas similar to Geophysical Survey Systems, Inc. (GSSI) (http://www.geophysical.com) 1.5 GHz (Model 5100) antenna, and MALA Geoscience (http://www.malags.com/) 1.2 GHz antenna are included. This simplifies the process of adding such intricate structures into a model. Listing 2 demonstrates that with two commands a model of a high-frequency antenna, such as shown in Fig. 1, can be inserted into a simulation without having to be built step-by-step by the user. Listing 2. Inserting a complex antenna model into an input file #python: import from gprMax3D.lib_antennas import antenna_like_Mala_1200 antenna_like_Mala_1200(0.050, 0.050, 0.050, resolution=’1mm’) #end_python:  Alongside improvements to the input file there is a new output file format – HDF5 [15] – to manage the larger and more complex data sets that are being generated. HDF5 is a robust, portable and extensible format with a number of free readers available. In addition, the Visualization Toolkit (VTK) [16] is being used for improved handling and viewing of the detailed 3D FDTD geometry meshes. The VTK is an opensource system for 3D computer graphics, image processing  With increased research into quantitative information from GPR, it has become necessary for models to be able to have more efficient and better-performing PML absorbing boundary conditions. Since 2005 gprMax has featured PML absorbing boundary conditions based on the uniaxial PML (UPML) [17] formulation. A PML based on a recursive integration (RI) approach to the complex frequency shifted (CFS) PML [18] has been adopted in the new version of gprMax. A general formulation of this RIPML, which can be used to develop any order of PML, has been used to implement first and second order CFS stretching functions. One of the attractions of the RIPML is that it is easily applied as a correction to the field quantities after the complete FDTD grid has been updated using the standard FDTD update equations. gprMax now offers the ability (for advanced users) to customise the parameters of the PML which allows its performance to be better optimised for specific applications. Additionally, since the RIPML is media agnostic it can be used without change to problems involving dispersive and anisotropic materials. B. Anisotropic materials It is now possible to include anisotropic objects in a gprMax simulation. This allows materials such as wood and fibrereinforced composites, which are often imaged with GPR, to be more accurately modelled. This has been achieved by enabling every volumetric geometry object to specify up to three material identifiers, as demonstrated in Listing 3. It is therefore possible for every object to have uniaxial anisotropy. Listing 3. An anisotropic object #material: 41.0 10.0 1.0 0.0 matX #material: 35.0 10.0 1.0 0.0 matY #material: 33.0 1.0 1.0 0.0 matZ #box: 0.000 0.000 0.000 0.100 0.100 0.050 matX matY matZ  C. Dispersive materials gprMax has always included the ability to represent dispersive materials using a single-pole Debye model. Many materials can be adequately represented using this approach for the typical frequency ranges associated with GPR. However, multi-pole Debye, Drude and Lorenz functions are often used to simulate the electric susceptibility of materials such as: water [19], human tissue [20], cold plasma [21], gold [22], and soils [23]–[25]. Electric susceptibility relates the polarization density to the electric field, and includes both the real and imaginary parts of the complex electric permittivity variation. In the new version of gprMax a recursive convolution based  Fig. 2. Stochastic distribution of an arbitrarily chosen property of the soil and a rough surface created using fractal correlated noise.  method is used to express dispersive properties as apparent current density sources [26]. A major advantage of this implementation is that it creates an inclusive susceptibility function that holds, as special cases, Debye, Drude and Lorenz materials. Listing 4 demonstrates the gprMax command to add a 2-pole Debye material. Listing 4. A 2-pole Debye material #material: 6.0 0.02 1.0 0.0 mySoil #add_dispersion_debye: 2 4.0 12E-10 3.5 13E-10 mySoil  D. Soil modelling The inclusion of improved models of soils is important for many GPR simulations. gprMax can now be used to create soils with more realistic dielectric and geometrical properties. A semi-empirical model, initially suggested by [27], is used to describe the dielectric properties of the soil. The model relates relative permittivity of the soil to bulk density, sand particle density, sand fraction, clay fraction and water volumetric fraction. Using this approach, a more realistic soil with a stochastic distribution of the aforementioned parameters can be modelled. The real and imaginary parts of this semi-empirical model can be approximated using a multi-pole Debye function plus a conductive term. This can now be achieved in gprMax using the new dispersive material functionality described in the previous subsection. Fractals are used to represent the topography of the soil. Increasing the fractal dimension increases the roughness of the surface of the soil. Fig. 2 demonstrates a soil model in gprMax with more realistic dielectric and geometrical properties. Fig. 3 presents a good example of some of the new advanced features in gprMax. It shows a model of a GPR antenna in a complex environment including inhomogeneous soil with a rough surface, pools of water, and grass, roots and vegetation. IV. C ONCLUSION Current computing resources offer the possibility to build ever larger and more complex simulations of GPR that have  Fig. 3. Complex modelling features that can be created with the new version of gprMax, including grass/vegetation, roots, inhomogeneous soil, rough surface, and pools of water.  not been possible before. A new version of gprMax has been created, rewritten using Python and Cython programming languages. This combines the object orientation, ease and flexibility of Python with most of the speed of a language such as C (by using Cython). A series of improvements have been made to existing features of gprMax as well as the addition of several new advanced modelling features such as: dispersive materials, anisotropic materials, and improved soil modelling. ACKNOWLEDGMENT The authors would like to acknowledge financial support for this work from The Defence Science and Technology Laboratory (Dstl), UK. This work has made use of the resources provided by the Edinburgh Compute and Data Facility (ECDF) (http://www.ecdf.ed.ac.uk/). This work benefited from networking activities carried out within the EU funded COST Action TU1208 ”Civil Engineering Applications of Ground Penetrating Radar.” R EFERENCES [1] A. Giannopoulos, “Modelling ground penetrating radar by gprmax,” Construction and building materials, vol. 19, no. 10, pp. 755–762, 2005. [2] Lumerical Solutions, Inc. Fdtd solutions. [Online]. Available: https: //www.lumerical.com/tcad-products/fdtd/ [3] Remcom. Xfdtd em simulation software. [Online]. Available: http: //www.remcom.com/xf7 [4] Gwangju Institute of Science and Technology. Gmes - gist maxwell’s equations solver. [Online]. Available: http://sourceforge.net/projects/ gmes/ [5] Massachusetts Institute of Technology. Meep - mit electromagnetic equation propagation. [Online]. Available: http://ab-initio.mit.edu/wiki/ index.php/Meep [6] L. Galagedara, J. Redman, G. Parkin, A. Annan, and A. Endres, “Numerical modeling of GPR to determine the direct ground wave sampling depth,” Vadose Zone Journal, vol. 4, pp. 1096–1106, 2005.  [7] M. Jeannin, S. Garambois, C. Grégoire, and D. Jongmans, “Multiconfiguration GPR measurements for geometric fracture characterization in limestone cliffs (Alps),” Geophysics, vol. 71, p. B85, 2006. [8] O. Lopera and N. Milisavljevic, “Prediction of the effects of soil and target properties on the antipersonnel landmine detection performance of ground-penetrating radar: A Colombian case study,” Journal of Applied Geophysics, vol. 63, no. 1, pp. 13–23, 2007. [9] F. Soldovieri, J. Hugenschmidt, R. Persico, and G. Leone, “A linear inverse scattering algorithm for realistic GPR applications,” Near Surface Geophysics, vol. 5, no. 1, pp. 29–42, 2007. [10] Elsevier. Scopus, the largest abstract and citation database of peer-reviewed literature. [Online]. Available: http://www.scopus.com [11] The University of Edinburgh. Edinburgh compute and data facility (ecdf). [Online]. Available: http://www.ecdf.ed.ac.uk [12] OpenMP Architecture Review Board. Openmp. [Online]. Available: http://openmp.org [13] Python Software Foundation. Python. [Online]. Available: https: //www.python.org/ [14] Cython. Cython. [Online]. Available: http://cython.org/ [15] The HDF Group. Hdf5 technology suite. [Online]. Available: http://www.hdfgroup.org/HDF5/ [16] Kitware Inc. The visualization toolkit. [Online]. Available: http: //www.vtk.org [17] S. D. Gedney, “The perfectly matched layer absorbing medium,” Advances in Computational Electrodynamics: The Finite-Difference TimeDomain Method, pp. 263–344, 1998. [18] A. Giannopoulos, “Unsplit implementation of higher order pmls,” Antennas and Propagation, IEEE Transactions on, vol. 60, no. 3, pp. 1479– 1485, 2012. [19] M. Pieraccini, A. Bicci, D. Mecatti, G. Macaluso, and C. Atzeni, “Propagation of large bandwidth microwave signals in water,” Antennas and Propagation, IEEE Transactions on, vol. 57, no. 11, pp. 3612–3618, 2009. [20] D. Ireland and A. Abbosh, “Modeling human head at microwave frequencies using optimized debye models and fdtd method,” Antennas and Propagation, IEEE Transactions on, vol. 61, no. 4, pp. 2352–2355, 2013. [21] J. Li, L.-X. Guo, Y.-C. Jiao, and R. Wang, “Composite scattering of a plasma-coated target above dispersive sea surface by the ade-fdtd method,” Geoscience and Remote Sensing Letters, IEEE, vol. 10, no. 1, pp. 4–8, 2013. [22] A. Vial, A.-S. Grimault, D. Macı́as, D. Barchiesi, and M. L. de La Chapelle, “Improved analytical fit of gold dispersion: Application to the modeling of extinction spectra with a finite-difference timedomain method,” Physical Review B, vol. 71, no. 8, p. 085416, 2005. [23] T. Bergmann, J. O. Robertsson, and K. Holliger, “Finite-difference modeling of electromagnetic wave propagation in dispersive and attenuating media,” Geophysics, vol. 63, no. 3, pp. 856–867, 1998. [24] I. Giannakis, A. Giannopoulos, and N. Davidson, “Incorporating dispersive electrical properties in fdtd gpr models using a general cole-cole dispersion function,” in Ground Penetrating Radar (GPR), 2012 14th International Conference on. IEEE, 2012, pp. 232–236. [25] F. L. Teixeira, W. C. Chew, M. Straka, M. Oristaglio, and T. Wang, “Finite-difference time-domain simulation of ground penetrating radar on dispersive, inhomogeneous, and conductive soils,” Geoscience and Remote Sensing, IEEE Transactions on, vol. 36, no. 6, pp. 1928–1937, 1998. [26] I. Giannakis and A. Giannopoulos, “A novel piecewise linear recursive convolution approach for dispersive media using the finite-difference time-domain method,” Antennas and Propagation, IEEE Transactions on, 2014. [27] M. C. Dobson, F. T. Ulaby, M. T. Hallikainen, and M. A. El-Rayes, “Microwave dielectric behavior of wet soil-part ii: Dielectric mixing models,” Geoscience and Remote Sensing, IEEE Transactions on, no. 1, pp. 35–46, 1985.  